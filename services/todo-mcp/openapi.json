{
  "openapi": "3.0.3",
  "info": {
    "title": "Todo MCP Server API",
    "description": "REST API for the Todo MCP server providing tool invocation endpoints for testing. For production MCP usage, use the SSE endpoint.",
    "version": "1.0.0",
    "contact": {
      "name": "API Support"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8081",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check",
        "description": "Returns the health status of the MCP server",
        "operationId": "healthCheck",
        "tags": ["Health"],
        "responses": {
          "200": {
            "description": "Service is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "healthy"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/schema": {
      "get": {
        "summary": "Get MCP protocol schema",
        "description": "Returns the MCP protocol schema information",
        "operationId": "getSchema",
        "tags": ["MCP Protocol"],
        "responses": {
          "200": {
            "description": "MCP schema information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCPSchema"
                }
              }
            }
          }
        }
      }
    },
    "/capabilities": {
      "get": {
        "summary": "Get server capabilities",
        "description": "Returns the capabilities supported by this MCP server",
        "operationId": "getCapabilities",
        "tags": ["MCP Protocol"],
        "responses": {
          "200": {
            "description": "Server capabilities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Capabilities"
                }
              }
            }
          }
        }
      }
    },
    "/tools": {
      "get": {
        "summary": "List all available tools",
        "description": "Returns a list of all tools available in this MCP server",
        "operationId": "listTools",
        "tags": ["Tools"],
        "responses": {
          "200": {
            "description": "List of available tools",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tools": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Tool"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tools/add_todo/invoke": {
      "post": {
        "summary": "Add a new todo item",
        "description": "Creates a new todo item in the todo list",
        "operationId": "addTodo",
        "tags": ["Tools"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "arguments": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "The title of the todo item",
                        "example": "Buy groceries"
                      },
                      "due_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The due date of the todo item (optional)",
                        "example": "2024-12-31T23:59:59Z"
                      }
                    },
                    "required": ["title"]
                  }
                },
                "required": ["arguments"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Todo item created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToolResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tools/get_todos/invoke": {
      "post": {
        "summary": "Get all todo items",
        "description": "Retrieves all todo items from the todo list",
        "operationId": "getTodos",
        "tags": ["Tools"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "arguments": {
                    "type": "object",
                    "properties": {},
                    "description": "No arguments required for this tool"
                  }
                },
                "required": ["arguments"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of todos retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToolResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tools/update_todo/invoke": {
      "post": {
        "summary": "Update a todo item",
        "description": "Updates an existing todo item by ID",
        "operationId": "updateTodo",
        "tags": ["Tools"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "arguments": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The ID of the todo item to update",
                        "example": 1
                      },
                      "title": {
                        "type": "string",
                        "description": "The new title for the todo item (optional)",
                        "example": "Buy groceries and cook dinner"
                      },
                      "due_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The new due date for the todo item (optional)",
                        "example": "2024-12-31T23:59:59Z"
                      }
                    },
                    "required": ["id"]
                  }
                },
                "required": ["arguments"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Todo item updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToolResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Todo item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToolResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tools/delete_todo/invoke": {
      "post": {
        "summary": "Delete a todo item",
        "description": "Deletes a todo item by ID",
        "operationId": "deleteTodo",
        "tags": ["Tools"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "arguments": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The ID of the todo item to delete",
                        "example": 1
                      }
                    },
                    "required": ["id"]
                  }
                },
                "required": ["arguments"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Todo item deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToolResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Todo item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToolResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/sse": {
      "get": {
        "summary": "MCP SSE endpoint",
        "description": "Server-Sent Events endpoint for MCP protocol communication. Clients should use this for production MCP usage.",
        "operationId": "sseGet",
        "tags": ["MCP Protocol"],
        "responses": {
          "200": {
            "description": "SSE stream initiated",
            "content": {
              "text/event-stream": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "MCP SSE message endpoint",
        "description": "Endpoint for sending messages to an active SSE session",
        "operationId": "ssePost",
        "tags": ["MCP Protocol"],
        "parameters": [
          {
            "name": "sessionid",
            "in": "query",
            "required": true,
            "description": "The session ID for the active SSE connection",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Message accepted"
          },
          "400": {
            "description": "Invalid request or session not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MCPSchema": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "example": "1.0.0"
          },
          "protocol": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Model Context Protocol"
              },
              "version": {
                "type": "string",
                "example": "2024-11-05"
              }
            }
          },
          "server": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "todo-mcp"
              },
              "version": {
                "type": "string",
                "example": "1.0.0"
              }
            }
          }
        }
      },
      "Capabilities": {
        "type": "object",
        "properties": {
          "tools": {
            "type": "object",
            "properties": {
              "supported": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "prompts": {
            "type": "object",
            "properties": {
              "supported": {
                "type": "boolean",
                "example": false
              }
            }
          },
          "resources": {
            "type": "object",
            "properties": {
              "supported": {
                "type": "boolean",
                "example": false
              }
            }
          }
        }
      },
      "Tool": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the tool"
          },
          "name": {
            "type": "string",
            "description": "Name of the tool"
          },
          "description": {
            "type": "string",
            "description": "Description of what the tool does"
          },
          "inputSchema": {
            "type": "object",
            "description": "JSON schema describing the tool's input parameters"
          }
        }
      },
      "ToolResult": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "text"
                },
                "text": {
                  "type": "string",
                  "description": "The result text from the tool execution"
                }
              }
            }
          },
          "isError": {
            "type": "boolean",
            "description": "Indicates if the tool execution resulted in an error"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": ["error"],
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message",
            "example": "Invalid request body"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Health",
      "description": "Health check endpoints"
    },
    {
      "name": "MCP Protocol",
      "description": "Model Context Protocol endpoints"
    },
    {
      "name": "Tools",
      "description": "Tool invocation endpoints (REST API for testing)"
    }
  ]
}
