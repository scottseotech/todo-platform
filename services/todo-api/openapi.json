{
  "openapi": "3.0.3",
  "info": {
    "title": "Todo API",
    "description": "A simple REST API for managing todos with PostgreSQL backend",
    "version": "1.0.0",
    "contact": {
      "name": "API Support"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local development server"
    },
    {
      "url": "https://todo-api.scottseo.tech",
      "description": "Production server"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check",
        "description": "Returns the health status of the API",
        "operationId": "healthCheck",
        "tags": ["Health"],
        "responses": {
          "200": {
            "description": "Service is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "healthy"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/todos": {
      "get": {
        "summary": "Get all todos",
        "description": "Retrieves a list of all todos",
        "operationId": "getTodos",
        "tags": ["Todos"],
        "responses": {
          "200": {
            "description": "A list of todos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Todo"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new todo",
        "description": "Creates a new todo item",
        "operationId": "createTodo",
        "tags": ["Todos"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Todo created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Todo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/todos/{id}": {
      "get": {
        "summary": "Get a todo by ID",
        "description": "Retrieves a specific todo by its ID",
        "operationId": "getTodoById",
        "tags": ["Todos"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the todo to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Todo found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Todo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid todo ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Todo not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a todo",
        "description": "Updates an existing todo item. Only provided fields will be updated.",
        "operationId": "updateTodo",
        "tags": ["Todos"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the todo to update",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Todo updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Todo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Todo not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a todo",
        "description": "Deletes a todo by its ID",
        "operationId": "deleteTodo",
        "tags": ["Todos"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the todo to delete",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Todo deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Todo deleted successfully!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid todo ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Todo not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Todo": {
        "type": "object",
        "required": ["id", "title", "created_at", "updated_at"],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the todo",
            "example": 1
          },
          "title": {
            "type": "string",
            "description": "Title of the todo item",
            "example": "Buy groceries"
          },
          "due_date": {
            "type": "string",
            "format": "date-time",
            "description": "Optional due date for the todo",
            "nullable": true,
            "example": "2024-12-31T23:59:59Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the todo was created",
            "example": "2024-01-01T10:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the todo was last updated",
            "example": "2024-01-01T10:00:00Z"
          }
        }
      },
      "CreateTodoRequest": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the todo item",
            "minLength": 1,
            "example": "Buy groceries"
          },
          "due_date": {
            "type": "string",
            "format": "date-time",
            "description": "Optional due date for the todo",
            "nullable": true,
            "example": "2024-12-31T23:59:59Z"
          }
        }
      },
      "UpdateTodoRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Updated title of the todo item",
            "minLength": 1,
            "example": "Buy groceries and cook dinner"
          },
          "due_date": {
            "type": "string",
            "format": "date-time",
            "description": "Updated due date for the todo",
            "nullable": true,
            "example": "2024-12-31T23:59:59Z"
          }
        },
        "description": "At least one field must be provided for update"
      },
      "Error": {
        "type": "object",
        "required": ["error"],
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message",
            "example": "Todo not found"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Health",
      "description": "Health check endpoints"
    },
    {
      "name": "Todos",
      "description": "Todo CRUD operations"
    }
  ]
}
